[{"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/index.js":"1","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/reportWebVitals.js":"2","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/App.jsx":"3","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/RoleContext.js":"4","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/UserContext.js":"5","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/IDContext.js":"6","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Home.jsx":"7","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/Header.jsx":"8","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/SignUp.jsx":"9","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Login.jsx":"10","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/api/user.js":"11","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Settings.jsx":"12","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/CreateEvent.jsx":"13","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Places.jsx":"14","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/AddPlace.jsx":"15","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Events.jsx":"16","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/Map.jsx":"17","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/DeletePlaceModal.jsx":"18","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/EditPlaceModal.jsx":"19","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/EditEventModal.jsx":"20","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/Place.jsx":"21","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/DeleteEventModal.jsx":"22","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/Routing.jsx":"23"},{"size":708,"mtime":1676313157521,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1676313157522,"results":"26","hashOfConfig":"25"},{"size":2308,"mtime":1676313595021,"results":"27","hashOfConfig":"25"},{"size":87,"mtime":1676313157307,"results":"28","hashOfConfig":"25"},{"size":87,"mtime":1676313157307,"results":"29","hashOfConfig":"25"},{"size":85,"mtime":1676313157307,"results":"30","hashOfConfig":"25"},{"size":898,"mtime":1676313157521,"results":"31","hashOfConfig":"25"},{"size":5380,"mtime":1676313157308,"results":"32","hashOfConfig":"25"},{"size":6828,"mtime":1676313157521,"results":"33","hashOfConfig":"25"},{"size":2356,"mtime":1676313157521,"results":"34","hashOfConfig":"25"},{"size":314,"mtime":1676313157307,"results":"35","hashOfConfig":"25"},{"size":9523,"mtime":1676313157521,"results":"36","hashOfConfig":"25"},{"size":5095,"mtime":1676322889753,"results":"37","hashOfConfig":"25"},{"size":7420,"mtime":1676366256297,"results":"38","hashOfConfig":"25"},{"size":3981,"mtime":1676324782649,"results":"39","hashOfConfig":"25"},{"size":7100,"mtime":1676366585081,"results":"40","hashOfConfig":"25"},{"size":4614,"mtime":1676313157308,"results":"41","hashOfConfig":"25"},{"size":1037,"mtime":1676313164009,"results":"42","hashOfConfig":"25"},{"size":2641,"mtime":1676313164009,"results":"43","hashOfConfig":"25"},{"size":2150,"mtime":1676313164009,"results":"44","hashOfConfig":"25"},{"size":2760,"mtime":1676313157308,"results":"45","hashOfConfig":"25"},{"size":1037,"mtime":1676313164009,"results":"46","hashOfConfig":"25"},{"size":693,"mtime":1676313157308,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ct7mnn",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/index.js",[],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/reportWebVitals.js",[],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/App.jsx",["129"],[],"import React, { useState, useEffect }  from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport { UserContext } from './UserContext.js';\n\n//components\nimport Header from './components/Header.jsx';\nimport Map from './components/Map.jsx';\n\n//page\nimport Home from './pages/Home.jsx';\nimport Login from './pages/Login.jsx';\nimport SignUp from './pages/SignUp.jsx';\nimport Events from './pages/Events.jsx';\nimport CreateEvent from './pages/CreateEvent.jsx';\nimport Places from './pages/Places.jsx';\nimport Settings from './pages/Settings.jsx';\nimport AddPlace from './pages/AddPlace.jsx';\n\nimport { getLoggedInUser } from './api/user.js';\nimport { RoleContext } from './RoleContext.js';\nimport { IDContext } from './IDContext.js';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(null);\n  const [id, setId] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = getLoggedInUser().then((res) => {\n      if (res.error) {\n        console.log(res.error);\n      }\n      else {\n        setUser(res.username);\n        setRole(res.role);\n        setId(res.id);\n      }\n    })\n      .catch((err) => console.log(err));\n\n    return () => unsubscribe;\n  }, []);\n\n  return (\n    <Router>\n      <UserContext.Provider value={{user, setUser}}>\n      <RoleContext.Provider value={{role, setRole}}>\n      <IDContext.Provider value={{id, setId}}>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={user ? <Map /> : <Home />} />\n          <Route path=\"/login\" element={user ? <Map /> : <Login />} />\n          <Route path=\"/signup\" element={user ? <Map /> : <SignUp />} />\n          <Route path=\"/settings\" element={user ? <Settings /> : <Home />} />\n          <Route path=\"/map\" element={user ? <Map /> : <Home />} />\n          <Route path=\"/events\" element={user ? <Events /> : <Home />}/>\n          <Route path=\"/createevent\" element={role==='manager' ? <CreateEvent /> : <Events />}/>\n          <Route path=\"/places\" element={user ? <Places /> : <Home />}/>\n          <Route path=\"/addplace\" element={role==='manager' ? <AddPlace /> : <Places />}/>\n        </Routes>\n        </IDContext.Provider>\n        </RoleContext.Provider>\n      </UserContext.Provider>\n    </Router>\n  )\n}\n\nexport default App;\n  ","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/RoleContext.js",[],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/UserContext.js",[],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/IDContext.js",[],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Home.jsx",[],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/Header.jsx",["130","131","132","133"],[],"import React, {useState, useContext} from 'react';\nimport axios from 'axios';\nimport { UserContext } from '../UserContext.js';\nimport {\n    MDBNavbar,\n    MDBContainer,\n    MDBNavbarBrand,\n    MDBNavbarToggler,\n    MDBNavbarItem,\n    MDBCollapse,\n    MDBBtn,\n    MDBIcon,\n    MDBNavbarNav,\n    MDBDropdown, \n    MDBDropdownMenu, \n    MDBDropdownToggle, \n    MDBDropdownItem,\n    MDBNavbarLink\n} from 'mdb-react-ui-kit';\n\n//styles\nimport '../styles/Header.css';\nimport { RoleContext } from '../RoleContext.js';\nimport { IDContext } from '../IDContext.js';\n\n\nconst Header = () => {\n  const {user, setUser} = useContext(UserContext);\n  const {role, setRole} = useContext(RoleContext);\n  const {id, setId} = useContext(IDContext);\n  const [showNavNoToggler, setShowNavNoToggler] = useState(false);\n\n  async function logout(){\n    let res=await axios.get('http://localhost:9000/users/logout', {withCredentials: true}).catch(err=>{\n      console.log(err.response.data)\n    })\n    if(res!==undefined){\n        setUser(null);\n        window.location.href='/login'\n    }\n  }\n\n  return (\n    <>\n      <MDBNavbar expand='lg' sticky light bgColor='light'>\n        <MDBContainer>\n            <MDBNavbarBrand href='/' className='brandResize'>BeOurGuest</MDBNavbarBrand>\n            <MDBNavbarToggler\n              type='button'\n              data-target='#navbarToggler'\n              aria-controls='navbarToggler'\n              aria-expanded='false'\n              aria-label='Toggle navigation'\n              onClick={() => setShowNavNoToggler(!showNavNoToggler)}\n            >\n              <MDBIcon icon='bars' fas />\n            </MDBNavbarToggler>\n\n            <MDBCollapse navbar show={showNavNoToggler}>\n              <MDBNavbarNav right fullWidth={false} className='mb-2 mb-lg-0'>\n              {user && role==='manager'?<MDBNavbarItem><MDBBtn outline className='me-3' size='lg' color='dark' href='/createevent'>Create event</MDBBtn></MDBNavbarItem>:\"\"}\n              {user?\n              <MDBNavbarItem><MDBBtn outline className='me-3' size='lg' color='dark' href='/events'>\n              Events\n            </MDBBtn></MDBNavbarItem>\n            :\"\"}\n            {user?<MDBNavbarItem><MDBBtn outline className='me-3' size='lg' color='dark' href='/places'>Places</MDBBtn></MDBNavbarItem>:\"\"}\n                <MDBNavbarItem>\n                  {user && <a className=\"nav-link active iconRemove me-3 linkFix\" aria-current=\"page\" href=\"/settings\">Hello, {user}!</a>}\n                </MDBNavbarItem>\n                <div className='mobileButtons'>\n                  {!user ? (\n                    <>\n                      <MDBNavbarItem>\n                        <MDBBtn className='shadow-4 mb-2' color='dark' href='/signup'><MDBIcon icon='code' fas /> Sign Up</MDBBtn>\n                      </MDBNavbarItem>\n                    </>        \n                    ) : (\n                    <>\n                      <MDBNavbarItem>\n                        <MDBBtn className='shadow-4 mb-2' color='dark' onClick={logout}><MDBIcon icon='code' fas /> Logout</MDBBtn>\n                      </MDBNavbarItem>\n                    </>\n                  )}\n                  <MDBNavbarItem>\n                    <MDBBtn color='light' href='https://github.com/telechubby/BeOurGuest-Homeworks' className='text-dark shadow-4 mb-2'><MDBIcon icon='github' fab /> Github</MDBBtn>\n                  </MDBNavbarItem>\n                  <MDBNavbarItem>\n                    <MDBBtn color='light' href='/about' className='text-dark shadow-4 mb-2'><MDBIcon icon='comment-alt' fas /> About Us</MDBBtn>\n                  </MDBNavbarItem>\n                </div>\n\n                {user?<MDBDropdown className='me-3 marginFix iconRemove'>\n                  <MDBDropdownToggle tag='a' role='button' className='colorIcon'>\n                    <MDBIcon icon='bell' fas size='lg' />\n                    <span className=\"badge rounded-pill badge-notification bg-danger\">1</span>\n                  </MDBDropdownToggle>\n                  <MDBDropdownMenu>\n                    <MDBDropdownItem link>Event</MDBDropdownItem>\n                    <MDBDropdownItem link>Another Event</MDBDropdownItem>\n                    <MDBDropdownItem divider />\n                    <MDBDropdownItem link>Something else here</MDBDropdownItem>\n                  </MDBDropdownMenu>\n                </MDBDropdown>:\"\"}\n\n                <MDBNavbarItem>\n                  <MDBBtn tag='a' color='none' href='https://github.com/telechubby/BeOurGuest-Homeworks' className='nav-link me-3 mt-1 iconRemove'><MDBIcon icon='github' fab size='lg' className='colorIcon'/></MDBBtn>\n                </MDBNavbarItem>\n\n                {!user ? (\n                  <>\n                    <MDBNavbarItem>\n                      <MDBBtn  size='lg' className='shadow-4 iconRemove mb-1' color='dark' href='/signup'><MDBIcon icon='code' fas /> Sign Up</MDBBtn>\n                    </MDBNavbarItem>\n                  </>        \n                  ) : (\n                  <>\n                    <MDBNavbarItem>\n                      <MDBBtn  size='lg' className='shadow-4 iconRemove mb-1' color='dark' onClick={logout}><MDBIcon icon='code' fas /> Logout</MDBBtn>\n                    </MDBNavbarItem>\n                  </>\n                )}\n\n              </MDBNavbarNav>\n            </MDBCollapse>\n        </MDBContainer>\n      </MDBNavbar>\n    </>\n  )\n}\n\nexport default Header","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/SignUp.jsx",[],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Login.jsx",["134","135","136"],[],"import React, {useState, useContext} from 'react';\nimport bcrypt from 'bcryptjs';\nimport axios from 'axios';\nimport { UserContext } from '../UserContext.js';\nimport { RoleContext } from '../RoleContext.js';\nimport { IDContext } from '../IDContext.js';\nimport { Link } from 'react-router-dom';\nimport {\n    MDBInput,\n    MDBCol,\n    MDBRow,\n    MDBContainer,\n    MDBCheckbox,\n    MDBBtn,\n    MDBIcon\n} from 'mdb-react-ui-kit';\n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    const {user,setUser} = useContext(UserContext);\n    const {role,setRole} = useContext(RoleContext);\n    const {id,setId} = useContext(IDContext);\n\n    async function login(){\n        const hash=bcrypt.hashSync(password,'$2a$12$fZuOVnbxBokJcNLepXdQBu')\n        let res=await axios.post('http://localhost:9000/users/login',{\n          email:email,\n          password_hash:hash,\n        }, {withCredentials: true}).catch(err=>{\n          setMessage(err.response.data)\n        })\n        if(res!==undefined){\n            setMessage('User logged in successfully. Redirecting to map...')\n            setUser(res.data.username)\n            setRole(res.data.role)\n            setId(res.data.id)\n        }\n      }\n\n    return (\n        <MDBContainer className='mt-5 mb-5 col-10 col-sm-8 col-md-6 col-lg-5'>\n            <form>\n                <MDBInput className='mb-4 shadow-3' type='email' label='Email Address' value={email} onChange={(e) => setEmail(e.target.value)} />\n                <MDBInput className='mb-4 shadow-3' type='password' label='Password' value={password} onChange={(e) => setPassword(e.target.value)}/>\n\n                <MDBRow className='mb-4'>\n                    <MDBCol className='d-flex justify-content-center'>\n                        <MDBCheckbox label='Remember me' />\n                    </MDBCol>\n                </MDBRow>\n\n                <MDBBtn color='dark' className='mb-4' type='button' onClick={login} block disabled={!email || !password}><MDBIcon icon='code' fas /> Login</MDBBtn>\n\n                <div className='text-center'>\n                    <p>Not a member? <Link to='/signup'>Sign Up</Link></p>\n                </div>\n                <p>{message}</p>\n            </form>\n        </MDBContainer>\n    )\n}\n\nexport default Login","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/api/user.js",[],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Settings.jsx",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],[],"import React, {useState,useContext, useEffect} from 'react'\nimport { UserContext } from '../UserContext.js';\nimport bcrypt from 'bcryptjs';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {\n    MDBInput,\n    MDBCol,\n    MDBRow,\n    MDBContainer,\n    MDBCheckbox,\n    MDBBtn,\n    MDBIcon,\n    MDBInputGroup\n} from 'mdb-react-ui-kit';\nimport { RoleContext } from '../RoleContext.js';\nimport { IDContext } from '../IDContext.js';\n\nconst Settings = () => {\n    //useStates\n\n    const {user,setUser} = useContext(UserContext);\n    const {role,setRole} = useContext(RoleContext);\n    const {id,setId} = useContext(IDContext);\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [message,setMessage]=useState(\"\")\n\n\n    //password validation vars\n    let hasEightChar = (password.length >= 8) && (password.length <= 16);\n    let hasLowerChar = /(.*[a-z].*)/.test(password);\n    let hasUpperChar = /(.*[A-Z].*)/.test(password);\n    let hasNumber = /(.*[0-9].*)/.test(password);\n    let hasSpecialChar = /(.*[^a-zA-Z0-9].*)/.test(password);\n\n    //Clear the forms on button click\n    const handleSubmit = (e) => {\n       \n    }\n    const handleName = (val) => {\n        setName(\"\");\n    };\n    const handleEmail = (val) => {\n        setEmail(\"\");\n    };\n    const handlePassword = (val) => {\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n    };\n\n    const updateName = async () =>{\n        let res=await axios.put('http://localhost:9000/users/nameUpdate',{\n          newName:name,\n          id:id\n        }, {withCredentials: true}).catch(err=>{\n          setMessage(err.response.data)\n        })\n        if(res!==undefined){\n            setMessage(res.data)\n        }\n        window.location.assign('/settings')\n    }\n\n    const updateMail = async () =>{\n        let res=await axios.put('http://localhost:9000/users/emailUpdate',{\n          newEmail:email,\n          id:id\n        }, {withCredentials: true}).catch(err=>{\n          setMessage(err.response.data)\n        })\n        if(res!==undefined){\n            setMessage(res.data)\n        }\n        window.location.assign('/settings')\n    }\n\n    const updatePassword = async () =>{\n        const hash=bcrypt.hashSync(password,'$2a$12$fZuOVnbxBokJcNLepXdQBu')\n        let res=await axios.put('http://localhost:9000/users/passwordUpdate',{\n          id:id,\n          newPass:hash,\n        }, {withCredentials: true}).catch(err=>{\n          setMessage(err.response.data)\n        })\n        window.location.assign('/settings')\n    }\n    \n      \n    return (\n        <MDBContainer className='mt-5 mb-5 col-10 col-sm-8 col-md-6 col-lg-5'>\n            <h1>User Settings</h1>\n            <h4>My role: {role}</h4>\n            <form onSubmit={handleSubmit}>\n                <MDBInputGroup className='mb-3'>\n                    <input className='form-control' placeholder=\"Name\" type='text' value={name} onChange={(e) => setName(e.target.value)} />\n                    \n                </MDBInputGroup>\n                <MDBBtn color='dark' className='mt-1'style={{\"marginBottom\":\"20px\"}} type='button' onClick={updateName} block disabled={ \n                    (!(name==null || name.replace(\" \",\"\").length>2))\n                    }>\n                        <MDBIcon icon='code' fas /> Change Name\n                </MDBBtn>\n                <MDBInputGroup className='mb-3'>\n                    <input className='form-control' placeholder=\"Email\" type='email' value={email} onChange={(e) => setEmail(e.target.value)} />\n                </MDBInputGroup>\n                <MDBBtn color='dark' className='mt-1'style={{\"marginBottom\":\"20px\"}} type='button' onClick={updateMail} block disabled={ \n                    (!(email==null || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)))\n                    }>\n                        <MDBIcon icon='code' fas /> Change Email\n                </MDBBtn>\n                <MDBInputGroup className='mb-3'>\n                    <input className='form-control' placeholder=\"Password\" type='password' value={password} onChange={(e) => setPassword(e.target.value)} />\n                </MDBInputGroup>\n                    <div className='ms-1' style={{columns: 2}}>\n                        <div>\n                            {hasEightChar ? (\n                                <span className='text-success'>\n                                    <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                                    <small> at least 8 characters</small>\n                                </span>\n                            ) : (\n                                <span className='text-danger'>\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                    <small> at least 8 characters</small>\n                                </span>\n                            )}\n                        </div>\n                        <div>\n                            {hasLowerChar ? (\n                                <span className='text-success'>\n                                    <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                                    <small> at least one lowercase letter</small>\n                                </span>\n                            ) : (\n                                <span className='text-danger'>\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                    <small> at least one lowercase letter</small>\n                                </span>\n                            )}\n                        </div>\n                        <div>\n                            {hasUpperChar ? (\n                                <span className='text-success'>\n                                    <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                                    <small> at least one uppercase letter</small>\n                                </span>\n                            ) : (\n                                <span className='text-danger'>\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                    <small> at least one uppercase letter</small>\n                                </span>\n                            )}\n                        </div>\n                        <div>\n                            {hasNumber ? (\n                                <span className='text-success'>\n                                    <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                                    <small> at least one number</small>\n                                </span>\n                            ) : (\n                                <span className='text-danger'>\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                    <small> at least one number</small>\n                                </span>\n                            )}\n                        </div>\n                        <div>\n                            {hasSpecialChar ? (\n                                <span className='text-success'>\n                                    <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                                    <small> at least one special character</small>\n                                </span>\n                            ) : (\n                                <span className='text-danger'>\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                    <small> at least one special character</small>\n                                </span>\n                            )}\n                        </div>\n                    </div>\n\n                <input className='form-control' placeholder=\"Confirm Password\" type='password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\n\n                \n                    <div className='ms-1' style={{columns: 2}}>\n                        <div>\n                            { confirmPassword === password ? (\n                                <span className='text-success'>\n                                    <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                                    <small> passwords must match</small>\n                                </span>\n                            ) : (\n                                <span className='text-danger'>\n                                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                    <small> passwords must match</small>\n                                </span>\n                            )}\n                        </div>\n                    </div>\n                \n                <MDBBtn color='dark' className='mt-4' type='button' onClick={updatePassword} block disabled={ \n                    ((!(confirmPassword == password) ||\n                    (!hasEightChar ||\n                    !hasLowerChar ||\n                    !hasUpperChar ||\n                    !hasNumber ||\n                    !hasSpecialChar))\n                    )\n                    }>\n                        <MDBIcon icon='code' fas /> Change Password\n                </MDBBtn>\n                <p>{message}</p>\n            </form>\n        </MDBContainer>\n    )\n}\n\nexport default Settings","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/CreateEvent.jsx",["152","153","154"],[],"import React, { Suspense, useEffect, useState, useContext } from 'react'\nimport axios from 'axios';\nimport { IDContext } from '../IDContext.js';\nimport {\n    MDBInput,\n    MDBCol,\n    MDBRow,\n    MDBContainer,\n    MDBCheckbox,\n    MDBBtn,\n    MDBIcon,\n    MDBDropdownItem,\n    MDBDropdown,\n    MDBDropdownToggle,\n    MDBDropdownMenu\n} from 'mdb-react-ui-kit';\n\nfunction CreateEvent() {\n    return (\n        <Suspense fallback={<h2>Loading places...</h2>}><LoadCreateEvent /></Suspense>\n    );\n}\n\nfunction LoadCreateEvent()\n{\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [startTime, setStartTime] = useState(\"\");\n    const [endTime, setEndTime] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [contact, setContact] = useState(\"\");\n    const [terms,setTerms]=useState(false);\n    const [message,setMessage]=useState(\"\");\n    const [places, setPlaces]=useState([])\n    const [location, setLocation]=useState(\"Select location for your event\")\n    const {id,setId} = useContext(IDContext);\n\n    useEffect(() => {\n\n        let datePicker=document.getElementById('eventDate')\n        datePicker.setAttribute('min',new Date().toISOString().split(\"T\")[0])\n        async function fetchData() {\n            const tmpPlaces = []\n            const response = await fetch('http://localhost:9000/places/ownerplaces?id='+id)\n            const responseJSON = await response.json()\n            responseJSON.forEach((fetchedPlace) => {\n                var place = fetchedPlace\n                tmpPlaces.push(place)\n            })\n            setPlaces(tmpPlaces)\n        }\n\n        fetchData();\n    }, [])\n\n    const createEvent=async()=>{\n        console.log(location)\n        const data = new FormData();\n        let place_name=places.filter(place=>place._id==location)[0].Name\n        data.append('file', image);\n        data.append('place_id', location);\n        data.append('place_name',place_name)\n        data.append('name', name);\n        data.append('description', description);\n        data.append('date', date);\n        data.append('startTime', startTime);\n        data.append('endTime', endTime);\n        data.append('contact', contact);\n\n      const res = await axios.post('http://localhost:9000/events/create',data,\n          {\n              headers: {\n                  'Content-Type': 'multipart/form-data'\n              }\n          }\n      ).catch(err=>{\n          setMessage(err.response.data)\n        })\n        if(res!==undefined){\n          setMessage('Event created!')\n        }\n  }\n\n    return (\n        <MDBContainer className='mt-5 mb-5 col-10 col-sm-8 col-md-6 col-lg-5'>\n            <h1 className='mb-4 text-center'>Create event</h1>\n            <form>\n                <MDBInput className='mb-4 shadow-3'  label='Name' onChange={(e) => setName(e.target.value)} />\n                <MDBInput className='mb-4 shadow-3'  label='Description'  onChange={(e) => setDescription(e.target.value)}/>\n                <MDBDropdown>\n                    <MDBDropdownToggle className='mb-4 shadow-3' style={{width:\"100%\"}} type='button'>{location}</MDBDropdownToggle>\n                    <MDBDropdownMenu className='shadow-3' style={{width:\"100%\"}}>\n                        {\n                            places.map(place=>{\n                                // @ts-ignore\n                                return <MDBDropdownItem key={place._id} link onClick={(e)=>setLocation(e.target.innerText)} style={{textAlign:\"center\"}}>{place.Name}</MDBDropdownItem>\n                            })\n                        }\n                    </MDBDropdownMenu>\n                </MDBDropdown>\n                <MDBInput className='mb-4 shadow-3'  label='Date' type='date' id='eventDate' onChange={(e) => setDate(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='StartTime' onChange={(e) => setStartTime(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='EndTime'  onChange={(e) => setEndTime(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  type='file' accept=\"image/*\" name=\"image\" onChange={(e) => setImage(\n// @ts-ignore\n                e.target.files[0])}/>\n                <MDBInput className='mb-4 shadow-3'  label='Contact'  onChange={(e) => setContact(e.target.value)}/>\n                <MDBRow className='mb-4'>\n                    <MDBCol className='d-flex justify-content-center'>\n                        <MDBCheckbox checked={terms} onChange={(e)=>setTerms(e.target.checked)} label='I accept terms and conditions' />\n                    </MDBCol>\n                </MDBRow>\n\n                <MDBBtn color='dark' className='mb-4' type='button' onClick={createEvent} block disabled={!name || !description || \n                !startTime || !endTime || !image || !contact || !date || !(terms) || location==='Select location for your event'}><MDBIcon icon='code' fas />Create Event</MDBBtn>\n                <p>{message}</p>\n            </form>\n        </MDBContainer>\n    )\n}\n\nexport default CreateEvent","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Places.jsx",["155","156","157"],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/AddPlace.jsx",["158"],[],"import React, {useState} from 'react'\nimport axios from 'axios';\nimport \"../styles/Places.css\"\nimport {\n    MDBInput,\n    MDBCol,\n    MDBRow,\n    MDBContainer,\n    MDBCheckbox,\n    MDBBtn,\n    MDBIcon\n} from 'mdb-react-ui-kit';\n\nconst AddPlace = () => {\n    const [name, setName] = useState(\"\");\n    const [street, setStreet] = useState(\"\");\n    const [suburb, setSuburb] = useState(\"\");\n    const [municipality, setMunicipality] = useState(\"\");\n    const [longitude, setLongitude] = useState(\"\");\n    const [latitude, setLatitude] = useState(\"\");\n    const [phone,setPhone]=useState(\"\");\n    const [amenity,setAmenity]=useState(\"\");\n    const [cusine,setCusine]=useState(\"\");\n    const [website,setWebsite]=useState(\"\");\n    const [workinghours,setWorkingHours]=useState(\"\");\n\n    const [terms,setTerms]=useState(\"false\");\n    const [message,setMessage]=useState(\"\");\n \n    const addPlace=async()=>{\n          const data = new FormData();\n          \n          data.append('name', name);\n          data.append('street', street);\n          data.append('suburb', suburb);\n          data.append('municipality', municipality);\n          data.append('longitude', longitude);\n          data.append('latitude', latitude);\n          data.append('phone', phone);\n          data.append('amenity', amenity);\n          data.append('cusine', cusine);\n          data.append('website', website);\n          data.append('workinghours', workinghours);\n        const res = await axios.post('http://localhost:9000/places/addPlace',data,\n            {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n        ).catch(err=>{\n            postMessage(err.response.data)\n          })\n          if(res!==undefined){\n            postMessage('Place Added!')\n          }\n    }\n\n    return (\n        <MDBContainer className='mt-5 mb-5 col-10 col-sm-8 col-md-6 col-lg-5'>\n            <h1 className='mb-4 text-center'>Add Place</h1>\n            <form>\n                <MDBInput className='mb-4 shadow-3'  label='Name' onChange={(e) => setName(e.target.value)} />\n                <MDBInput className='mb-4 shadow-3'  label='Street'  onChange={(e) => setStreet(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='Suburb'  onChange={(e) => setSuburb(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='Municipality' onChange={(e) => setMunicipality(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='Longitude'  onChange={(e) => setLongitude(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='Latitude' onChange={(e) => setLatitude(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='Phone' onChange={(e) => setPhone(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='Amenity'  onChange={(e) => setAmenity(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='Cusine' onChange={(e) => setCusine(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='Website'  onChange={(e) => setWebsite(e.target.value)}/>\n                <MDBInput className='mb-4 shadow-3'  label='WorkingHours' onChange={(e) => setWorkingHours(e.target.value)}/>\n                <MDBRow className='mb-4'>\n                    <MDBCol className='d-flex justify-content-center'>\n                        <MDBCheckbox value={terms} onChange={(e)=>setTerms(e.target.value)} label='I accept terms and conditions' />\n                    </MDBCol>\n                </MDBRow>\n\n                <MDBBtn color='dark' className='mb-4' type='button' onClick={addPlace} block disabled={!name || !street || \n                !suburb || !municipality || !longitude || !latitude || !phone || !amenity || !cusine || !website || !workinghours}><MDBIcon fas />Add place</MDBBtn>\n                <p>{message}</p>\n            </form>\n        </MDBContainer>\n    )\n}\n\nexport default AddPlace","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Events.jsx",["159","160","161","162","163","164","165","166","167","168","169","170","171"],[],"/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/Map.jsx",["172","173","174"],[],"//components\nimport React, { Component, useEffect} from 'react';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet'\nimport Place from './Place';\n\n//styles\nimport '../styles/Map.css';\n\n//custom marker icon\nvar userIcon = L.icon({\n    iconUrl:  require('../img/markers/marker-icon-red.png'),\n    shadowUrl: require('../img/markers/marker-shadow.png'),\n    iconSize: [25, 41],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [1, -41],\n    shadowSize: [41, 41]\n});\n\nvar placeIcon = L.icon({\n    iconUrl:  require('../img/markers/marker-icon-blue.png'),\n    shadowUrl: require('../img/markers/marker-shadow.png'),\n    iconSize: [25, 41],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [1, -41],\n    shadowSize: [41, 41]\n});\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            location: {\n                lat: 41.9972,\n                lng: 21.4331,\n            },\n            zoom: 16,\n            allowedLocation: false,\n            displayed: false,\n            markers:[]\n        }\n        this.displayRoute = this.displayRoute.bind(this);\n        this.removeRoute = this.removeRoute.bind(this);\n    }\n\n    /*Called when the page is loaded, if the user denies access through their browser we get their location through their IP address using ipAPI\n      Update the state after the user is located*/\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition((position) => {\n            this.setState({\n                location: {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                },\n                allowedLocation: true\n            });\n        },async  () => {\n            console.log('ERROR: Location access denied! Fetching location based on IP address.');\n            await fetch('https://ipapi.co/json')\n                .then(res => res.json())\n                .then(location => {\n                    this.setState({\n                        location: {\n                            lat: location.latitude,\n                            lng: location.longitude\n                        },\n                        allowedLocation: true\n                    });\n                });\n        });\n        this.loadMarkers();\n    }\n\n    async loadMarkers(){\n        const {markers} = this.state\n        fetch('http://localhost:9000/places/')\n        .then(res=>res.json())\n        .then(places=>this.setState({markers:places}))\n    }\n\n    displayRoute() {\n        this.setState({\n            displayed: true\n        });\n    }\n    removeRoute() {\n        this.setState({\n            displayed: false\n        });\n    } \n\n    //Map and marker rendering, flying animation when the user is located\n    render() {\n        const position = [this.state.location.lat, this.state.location.lng];\n        \n        const FlyMapTo = () => {\n            const map = useMap()\n        \n            useEffect(() => {\n                map.flyTo(position)\n            }, [position])\n\n            return null\n        }\n\n        return (\n            <MapContainer className='map' center={position} zoom={this.state.zoom} scrollWheelZoom={true} zoomControl={false}>\n                <TileLayer\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                { this.state.allowedLocation &&\n                    <Marker position={position} icon={userIcon}>\n                        <Popup>\n                            Among Us.\n                        </Popup>\n                    </Marker> \n                }\n                {   this.state.markers &&\n                    this.state.markers.map(place=>{\n                        return(\n                            <Place key={place._id}\n                            userLocation={position} \n                            eventLocation={[place.Latitude, place.Longtitude]}\n                            eventOrg={place.Name}\n                            eventId={place._id}\n                            displayRoute={this.displayRoute}\n                            removeRoute={this.removeRoute}\n                            value={this.state.displayed}\n                        />\n                        )\n                    })\n                }\n                <FlyMapTo />\n            </MapContainer>\n        );\n    }\n}\n\nexport default Map","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/DeletePlaceModal.jsx",["175"],[],"import { MDBModal, MDBModalDialog, MDBModalContent, MDBModalHeader, MDBModalTitle, MDBBtn, MDBModalBody, MDBModalFooter } from \"mdb-react-ui-kit\";\nimport React, { Component } from \"react\";\n\nexport const DeletePlaceModal = ({isVisible,setIsVisible, place}) => {\n    const deletePlace=()=>{console.log(\"implement delete\")\n    setIsVisible(false)}\n    return (<MDBModal show={isVisible} setShow={setIsVisible} tabIndex='-1'>\n    <MDBModalDialog>\n      <MDBModalContent>\n        <MDBModalHeader>\n          <MDBModalTitle>Confirm Delete</MDBModalTitle>\n          <MDBBtn className='btn-close' color='none' onClick={()=>setIsVisible(false)}></MDBBtn>\n        </MDBModalHeader>\n        <MDBModalBody>Are you sure you want to delete {place.Name} ?</MDBModalBody>\n\n        <MDBModalFooter>\n          <MDBBtn color='secondary' onClick={()=>setIsVisible(false)}>\n            Close\n          </MDBBtn>\n          <MDBBtn onClick={deletePlace}>Delete</MDBBtn>\n        </MDBModalFooter>\n      </MDBModalContent>\n    </MDBModalDialog>\n  </MDBModal>)\n}\n\n","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/EditPlaceModal.jsx",["176","177","178","179","180","181","182","183","184","185","186","187","188"],[],"import { MDBModal, MDBModalDialog, MDBModalContent, MDBModalHeader, MDBModalTitle, MDBBtn, MDBModalBody, MDBModalFooter, MDBCheckbox, MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport React, { Component, useEffect, useState } from \"react\";\n\nexport const EditPlaceModal = ({isVisible,setIsVisible, place}) => {\n\n\n    const editPlace=()=>{console.log(\"edit\")\n    setIsVisible(false)}\n\n    const [name, setName] = useState(place.Name)\n    const [street,setStreet] = useState(place.Street)\n    const [suburb, setSuburb] = useState(place.Suburb);\n    const [municipality, setMunicipality] = useState(place.Municipality);\n    const [longitude, setLongitude] = useState(place.Longitude);\n    const [latitude, setLatitude] = useState(place.Latitude);\n    //  ? const [categories, setCategories] = useState(\"\");\n    const [phone,setPhone]=useState(place.Phone);\n    const [amenity,setAmenity]=useState(place.Amenity);\n    const [cusine,setCusine]=useState(place.Cusine);\n    const [website,setWebsite]=useState(place.SetWebsite);\n    const [workinghours,setWorkingHours]=useState(place.WorkingHours);\n\n\n    useEffect(()=>{setName(place.name);setStreet(place.Street);},[place])\n    return (<MDBModal show={isVisible} setShow={setIsVisible} tabIndex='-1'>\n    <MDBModalDialog>\n      <MDBModalContent>\n        <MDBModalHeader>\n          <MDBModalTitle>Edit Place</MDBModalTitle>\n          <MDBBtn className='btn-close' color='none' onClick={()=>setIsVisible(false)}></MDBBtn>\n        </MDBModalHeader>\n        <MDBModalBody>\n        <form>\n          <MDBInput className='mb-4'label='Name' value={name}/>\n          <MDBInput className='mb-4'label='Street' value={street}/>\n          <MDBInput className='mb-4'label='Suburb' value={suburb}/>\n          <MDBInput className='mb-4'label='Municipality' value={municipality}/>\n          <MDBInput className='mb-4'label='Longitude' value={longitude}/>\n          <MDBInput className='mb-4'label='Latitude' value={latitude}/>\n          <MDBInput className='mb-4'label='Phone' value={phone}/>\n          <MDBInput className='mb-4'label='Amenity' value={amenity}/>\n          <MDBInput className='mb-4'label='Cusine' value={cusine}/>\n          <MDBInput className='mb-4'label='Website' value={website}/>\n          <MDBInput className='mb-4'label='WorkingHours' value={workinghours}/>\n        </form>\n        </MDBModalBody>\n\n        <MDBModalFooter>\n          <MDBBtn color='secondary' onClick={()=>setIsVisible(false)}>\n            Close\n          </MDBBtn>\n          <MDBBtn onClick={editPlace}>Save Place</MDBBtn>\n        </MDBModalFooter>\n      </MDBModalContent>\n    </MDBModalDialog>\n  </MDBModal>)\n}\n\n","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/EditEventModal.jsx",["189","190","191","192","193","194","195","196","197","198","199"],[],"import { MDBModal, MDBModalDialog, MDBModalContent, MDBModalHeader, MDBModalTitle, MDBBtn, MDBModalBody, MDBModalFooter, MDBCheckbox, MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport React, { Component, useEffect, useState } from \"react\";\n\nexport const EditEventModal = ({isVisible,setIsVisible, event}) => {\n\n\n    const editEvent=()=>{console.log(\"edit\")\n    setIsVisible(false)}\n  \n    const [name, setName] = useState(event.Name)\n    const [palceid,setPlaceID] = useState(event.PlaceID)\n    const [description, setDescription] = useState(event.Description);\n    const [startTime, setStartTime] = useState(event.StartTime);\n    const [date, setDate] = useState(event.Date);\n    const [endTime, setEndTime] = useState(event.EndTime);\n    const [image,setImage]=useState(event.Image);\n    const [contact,setContact]=useState(event.Contact);\n  \n    \n\n    useEffect(()=>{setName(event.name);},[event])\n    return (<MDBModal show={isVisible} setShow={setIsVisible} tabIndex='-1'>\n    <MDBModalDialog>\n      <MDBModalContent>\n        <MDBModalHeader>\n          <MDBModalTitle>Edit Event</MDBModalTitle>\n          <MDBBtn className='btn-close' color='none' onClick={()=>setIsVisible(false)}></MDBBtn>\n        </MDBModalHeader>\n        <MDBModalBody>\n        <form>\n          <MDBInput className='mb-4'label='Name' value={name}/>\n          <MDBInput className='mb-4'label='PlaceID' value={palceid}/>\n          <MDBInput className='mb-4'label='Description' value={description}/>\n          <MDBInput className='mb-4'label='StarTtime' value={startTime}/>\n          <MDBInput className='mb-4'label='Date' value={date}/>\n          <MDBInput className='mb-4'label='EndTime' value={endTime}/>\n          <MDBInput className='mb-4'label='Image' value={image}/>\n          <MDBInput className='mb-4'label='Contact' value={contact}/>\n        </form>\n        </MDBModalBody>\n\n        <MDBModalFooter>\n          <MDBBtn color='secondary' onClick={()=>setIsVisible(false)}>\n            Close\n          </MDBBtn>\n          <MDBBtn onClick={editEvent}>Save Event</MDBBtn>\n        </MDBModalFooter>\n      </MDBModalContent>\n    </MDBModalDialog>\n  </MDBModal>)\n}\n\n","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/Place.jsx",["200","201"],[],"//components\nimport React, { Component, useEffect} from 'react'\nimport L from 'leaflet';\nimport { Marker, Popup, useMap } from 'react-leaflet'\nimport 'leaflet-routing-machine';\nimport Routing from './Routing.jsx';\n\n//styles\nimport '../styles/Event.css'\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport { MDBBtn } from 'mdb-react-ui-kit';\n\n//custom marker icon\nvar eventIcon = L.icon({\n    iconUrl: require('../img/markers/marker-icon-blue.png'),\n    shadowUrl: require('../img/markers/marker-shadow.png'),\n    iconSize: [25, 41],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [1, -41],\n    shadowSize: [41, 41]\n});\n\nexport class Place extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayed: false\n        }\n        this.setDisplay = this.setDisplay.bind(this);\n        this.removeDisplay = this.removeDisplay.bind(this);\n    }\n\n    setDisplay() {\n        this.setState({\n            displayed: true\n        });\n    }\n    removeDisplay() {\n        this.setState({\n            displayed: false\n        });\n    }\n\n    render() {\n        return (\n            <>\n                { this.state.displayed && <MDBBtn color='danger' className='refreshButton mt-3 ms-3' onClick={() => { this.props.removeRoute(); this.removeDisplay()}}><i className=\"fa fa-times me-2\" aria-hidden=\"true\"></i> Remove Route</MDBBtn> }\n\n                <Marker position={this.props.eventLocation} icon={eventIcon}>\n                    <Popup>\n                        <h2 className='text-center'>{this.props.eventOrg}</h2>\n                        <div className='text-center'>\n                            <MDBBtn color='dark' className='mt-0' style={{margin:'10px 0', textDecoration:\"none\", color:\"white\", width:\"90%\"}} href={'/places?id='+this.props.eventId}>Show place</MDBBtn> \n                        </div>\n                        <div className='text-center'>\n                            <MDBBtn color='dark' className='mt-0' style={{margin:'10px 0', textDecoration:\"none\", color:\"white\", width:\"90%\"}} href={'/events?id='+this.props.eventId}>Show events for this place</MDBBtn> \n                        </div>\n                        <div className='text-center'>\n                            { this.state.displayed && <Routing user={this.props.userLocation} event={this.props.eventLocation} /> }\n                            <MDBBtn color='danger' className='mt-0' style={{margin:'10px 0', width:\"90%\"}} onClick={() => { this.props.displayRoute(); this.setDisplay()}} disabled={this.props.value}>Get Directions <i className='fa fa-arrow-right' /></MDBBtn> \n                        </div>\n                        </Popup>\n                </Marker>\n            </>  \n        )\n    }\n}\n\nexport default Place","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/DeleteEventModal.jsx",["202"],[],"import { MDBModal, MDBModalDialog, MDBModalContent, MDBModalHeader, MDBModalTitle, MDBBtn, MDBModalBody, MDBModalFooter } from \"mdb-react-ui-kit\";\nimport React, { Component } from \"react\";\n\nexport const DeleteEventModal = ({isVisible,setIsVisible, event}) => {\n    const deleteEvent=()=>{console.log(\"implement delete\")\n    setIsVisible(false)}\n    return (<MDBModal show={isVisible} setShow={setIsVisible} tabIndex='-1'>\n    <MDBModalDialog>\n      <MDBModalContent>\n        <MDBModalHeader>\n          <MDBModalTitle>Confirm Delete</MDBModalTitle>\n          <MDBBtn className='btn-close' color='none' onClick={()=>setIsVisible(false)}></MDBBtn>\n        </MDBModalHeader>\n        <MDBModalBody>Are you sure you want to delete {event.Name} ?</MDBModalBody>\n\n        <MDBModalFooter>\n          <MDBBtn color='secondary' onClick={()=>setIsVisible(false)}>\n            Close\n          </MDBBtn>\n          <MDBBtn onClick={deleteEvent}>Delete</MDBBtn>\n        </MDBModalFooter>\n      </MDBModalContent>\n    </MDBModalDialog>\n  </MDBModal>)\n}\n\n","/Users/ljubomirkolev/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/components/Routing.jsx",[],[],{"ruleId":"203","severity":1,"message":"204","line":2,"column":50,"nodeType":"205","messageId":"206","endLine":2,"endColumn":58},{"ruleId":"203","severity":1,"message":"207","line":18,"column":5,"nodeType":"205","messageId":"206","endLine":18,"endColumn":18},{"ruleId":"203","severity":1,"message":"208","line":29,"column":16,"nodeType":"205","messageId":"206","endLine":29,"endColumn":23},{"ruleId":"203","severity":1,"message":"209","line":30,"column":10,"nodeType":"205","messageId":"206","endLine":30,"endColumn":12},{"ruleId":"203","severity":1,"message":"210","line":30,"column":14,"nodeType":"205","messageId":"206","endLine":30,"endColumn":19},{"ruleId":"203","severity":1,"message":"211","line":23,"column":12,"nodeType":"205","messageId":"206","endLine":23,"endColumn":16},{"ruleId":"203","severity":1,"message":"212","line":24,"column":12,"nodeType":"205","messageId":"206","endLine":24,"endColumn":16},{"ruleId":"203","severity":1,"message":"209","line":25,"column":12,"nodeType":"205","messageId":"206","endLine":25,"endColumn":14},{"ruleId":"203","severity":1,"message":"213","line":1,"column":37,"nodeType":"205","messageId":"206","endLine":1,"endColumn":46},{"ruleId":"203","severity":1,"message":"214","line":5,"column":9,"nodeType":"205","messageId":"206","endLine":5,"endColumn":13},{"ruleId":"203","severity":1,"message":"215","line":7,"column":5,"nodeType":"205","messageId":"206","endLine":7,"endColumn":13},{"ruleId":"203","severity":1,"message":"216","line":8,"column":5,"nodeType":"205","messageId":"206","endLine":8,"endColumn":11},{"ruleId":"203","severity":1,"message":"217","line":9,"column":5,"nodeType":"205","messageId":"206","endLine":9,"endColumn":11},{"ruleId":"203","severity":1,"message":"218","line":11,"column":5,"nodeType":"205","messageId":"206","endLine":11,"endColumn":16},{"ruleId":"203","severity":1,"message":"211","line":22,"column":12,"nodeType":"205","messageId":"206","endLine":22,"endColumn":16},{"ruleId":"203","severity":1,"message":"219","line":22,"column":17,"nodeType":"205","messageId":"206","endLine":22,"endColumn":24},{"ruleId":"203","severity":1,"message":"208","line":23,"column":17,"nodeType":"205","messageId":"206","endLine":23,"endColumn":24},{"ruleId":"203","severity":1,"message":"210","line":24,"column":15,"nodeType":"205","messageId":"206","endLine":24,"endColumn":20},{"ruleId":"203","severity":1,"message":"220","line":43,"column":11,"nodeType":"205","messageId":"206","endLine":43,"endColumn":21},{"ruleId":"203","severity":1,"message":"221","line":46,"column":11,"nodeType":"205","messageId":"206","endLine":46,"endColumn":22},{"ruleId":"203","severity":1,"message":"222","line":49,"column":11,"nodeType":"205","messageId":"206","endLine":49,"endColumn":25},{"ruleId":"203","severity":1,"message":"223","line":82,"column":13,"nodeType":"205","messageId":"206","endLine":82,"endColumn":16},{"ruleId":"224","severity":1,"message":"225","line":205,"column":41,"nodeType":"226","messageId":"227","endLine":205,"endColumn":43},{"ruleId":"203","severity":1,"message":"210","line":37,"column":15,"nodeType":"205","messageId":"206","endLine":37,"endColumn":20},{"ruleId":"228","severity":1,"message":"229","line":55,"column":8,"nodeType":"230","endLine":55,"endColumn":10,"suggestions":"231"},{"ruleId":"224","severity":1,"message":"225","line":60,"column":54,"nodeType":"226","messageId":"227","endLine":60,"endColumn":56},{"ruleId":"203","severity":1,"message":"232","line":26,"column":12,"nodeType":"205","messageId":"206","endLine":26,"endColumn":23},{"ruleId":"203","severity":1,"message":"233","line":26,"column":25,"nodeType":"205","messageId":"206","endLine":26,"endColumn":39},{"ruleId":"228","severity":1,"message":"234","line":70,"column":8,"nodeType":"230","endLine":70,"endColumn":10,"suggestions":"235"},{"ruleId":"203","severity":1,"message":"236","line":28,"column":20,"nodeType":"205","messageId":"206","endLine":28,"endColumn":30},{"ruleId":"203","severity":1,"message":"214","line":3,"column":10,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"237","line":3,"column":16,"nodeType":"205","messageId":"206","endLine":3,"endColumn":29},{"ruleId":"203","severity":1,"message":"215","line":5,"column":5,"nodeType":"205","messageId":"206","endLine":5,"endColumn":13},{"ruleId":"203","severity":1,"message":"216","line":6,"column":5,"nodeType":"205","messageId":"206","endLine":6,"endColumn":11},{"ruleId":"203","severity":1,"message":"217","line":7,"column":5,"nodeType":"205","messageId":"206","endLine":7,"endColumn":11},{"ruleId":"203","severity":1,"message":"238","line":8,"column":5,"nodeType":"205","messageId":"206","endLine":8,"endColumn":17},{"ruleId":"203","severity":1,"message":"218","line":9,"column":5,"nodeType":"205","messageId":"206","endLine":9,"endColumn":16},{"ruleId":"203","severity":1,"message":"239","line":18,"column":9,"nodeType":"205","messageId":"206","endLine":18,"endColumn":15},{"ruleId":"203","severity":1,"message":"208","line":32,"column":19,"nodeType":"205","messageId":"206","endLine":32,"endColumn":26},{"ruleId":"203","severity":1,"message":"232","line":40,"column":12,"nodeType":"205","messageId":"206","endLine":40,"endColumn":23},{"ruleId":"203","severity":1,"message":"233","line":40,"column":25,"nodeType":"205","messageId":"206","endLine":40,"endColumn":39},{"ruleId":"203","severity":1,"message":"240","line":44,"column":11,"nodeType":"205","messageId":"206","endLine":44,"endColumn":15},{"ruleId":"228","severity":1,"message":"241","line":91,"column":11,"nodeType":"230","endLine":91,"endColumn":13,"suggestions":"242"},{"ruleId":"203","severity":1,"message":"243","line":22,"column":5,"nodeType":"205","messageId":"206","endLine":22,"endColumn":14},{"ruleId":"203","severity":1,"message":"244","line":78,"column":16,"nodeType":"205","messageId":"206","endLine":78,"endColumn":23},{"ruleId":"228","severity":1,"message":"245","line":104,"column":16,"nodeType":"230","endLine":104,"endColumn":26,"suggestions":"246"},{"ruleId":"203","severity":1,"message":"247","line":2,"column":17,"nodeType":"205","messageId":"206","endLine":2,"endColumn":26},{"ruleId":"203","severity":1,"message":"218","line":1,"column":122,"nodeType":"205","messageId":"206","endLine":1,"endColumn":133},{"ruleId":"203","severity":1,"message":"216","line":1,"column":135,"nodeType":"205","messageId":"206","endLine":1,"endColumn":141},{"ruleId":"203","severity":1,"message":"217","line":1,"column":153,"nodeType":"205","messageId":"206","endLine":1,"endColumn":159},{"ruleId":"203","severity":1,"message":"247","line":2,"column":17,"nodeType":"205","messageId":"206","endLine":2,"endColumn":26},{"ruleId":"203","severity":1,"message":"248","line":12,"column":20,"nodeType":"205","messageId":"206","endLine":12,"endColumn":29},{"ruleId":"203","severity":1,"message":"249","line":13,"column":26,"nodeType":"205","messageId":"206","endLine":13,"endColumn":41},{"ruleId":"203","severity":1,"message":"250","line":14,"column":23,"nodeType":"205","messageId":"206","endLine":14,"endColumn":35},{"ruleId":"203","severity":1,"message":"251","line":15,"column":22,"nodeType":"205","messageId":"206","endLine":15,"endColumn":33},{"ruleId":"203","severity":1,"message":"252","line":17,"column":18,"nodeType":"205","messageId":"206","endLine":17,"endColumn":26},{"ruleId":"203","severity":1,"message":"253","line":18,"column":20,"nodeType":"205","messageId":"206","endLine":18,"endColumn":30},{"ruleId":"203","severity":1,"message":"254","line":19,"column":19,"nodeType":"205","messageId":"206","endLine":19,"endColumn":28},{"ruleId":"203","severity":1,"message":"255","line":20,"column":20,"nodeType":"205","messageId":"206","endLine":20,"endColumn":30},{"ruleId":"203","severity":1,"message":"256","line":21,"column":25,"nodeType":"205","messageId":"206","endLine":21,"endColumn":40},{"ruleId":"203","severity":1,"message":"218","line":1,"column":122,"nodeType":"205","messageId":"206","endLine":1,"endColumn":133},{"ruleId":"203","severity":1,"message":"216","line":1,"column":135,"nodeType":"205","messageId":"206","endLine":1,"endColumn":141},{"ruleId":"203","severity":1,"message":"217","line":1,"column":153,"nodeType":"205","messageId":"206","endLine":1,"endColumn":159},{"ruleId":"203","severity":1,"message":"247","line":2,"column":17,"nodeType":"205","messageId":"206","endLine":2,"endColumn":26},{"ruleId":"203","severity":1,"message":"257","line":11,"column":20,"nodeType":"205","messageId":"206","endLine":11,"endColumn":30},{"ruleId":"203","severity":1,"message":"258","line":12,"column":25,"nodeType":"205","messageId":"206","endLine":12,"endColumn":39},{"ruleId":"203","severity":1,"message":"259","line":13,"column":23,"nodeType":"205","messageId":"206","endLine":13,"endColumn":35},{"ruleId":"203","severity":1,"message":"260","line":14,"column":18,"nodeType":"205","messageId":"206","endLine":14,"endColumn":25},{"ruleId":"203","severity":1,"message":"261","line":15,"column":21,"nodeType":"205","messageId":"206","endLine":15,"endColumn":31},{"ruleId":"203","severity":1,"message":"262","line":16,"column":18,"nodeType":"205","messageId":"206","endLine":16,"endColumn":26},{"ruleId":"203","severity":1,"message":"263","line":17,"column":20,"nodeType":"205","messageId":"206","endLine":17,"endColumn":30},{"ruleId":"203","severity":1,"message":"213","line":2,"column":28,"nodeType":"205","messageId":"206","endLine":2,"endColumn":37},{"ruleId":"203","severity":1,"message":"264","line":4,"column":25,"nodeType":"205","messageId":"206","endLine":4,"endColumn":31},{"ruleId":"203","severity":1,"message":"247","line":2,"column":17,"nodeType":"205","messageId":"206","endLine":2,"endColumn":26},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'MDBNavbarLink' is defined but never used.","'setRole' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'user' is assigned a value but never used.","'role' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'MDBInput' is defined but never used.","'MDBCol' is defined but never used.","'MDBRow' is defined but never used.","'MDBCheckbox' is defined but never used.","'setUser' is assigned a value but never used.","'handleName' is assigned a value but never used.","'handleEmail' is assigned a value but never used.","'handlePassword' is assigned a value but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["265"],"'searchField' is assigned a value but never used.","'setSearchField' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ownerID' and 'placeID'. Either include them or remove the dependency array.",["266"],"'setMessage' is assigned a value but never used.","'renderMatches' is defined but never used.","'MDBContainer' is defined but never used.","'images' is assigned a value but never used.","'mine' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'eventID'. Either include it or remove the dependency array.",["267"],"'placeIcon' is assigned a value but never used.","'markers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array. Outer scope values like 'position' aren't valid dependencies because mutating them doesn't re-render the component.",["268"],"'Component' is defined but never used.","'setSuburb' is assigned a value but never used.","'setMunicipality' is assigned a value but never used.","'setLongitude' is assigned a value but never used.","'setLatitude' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'setAmenity' is assigned a value but never used.","'setCusine' is assigned a value but never used.","'setWebsite' is assigned a value but never used.","'setWorkingHours' is assigned a value but never used.","'setPlaceID' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setStartTime' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setEndTime' is assigned a value but never used.","'setImage' is assigned a value but never used.","'setContact' is assigned a value but never used.","'useMap' is defined but never used.",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [id]",{"range":"277","text":"278"},"Update the dependencies array to be: [ownerID, placeID]",{"range":"279","text":"280"},"Update the dependencies array to be: [eventID]",{"range":"281","text":"282"},"Update the dependencies array to be: [map]",{"range":"283","text":"284"},[1710,1712],"[id]",[2780,2782],"[ownerID, placeID]",[3632,3634],"[eventID]",[3139,3149],"[map]"]
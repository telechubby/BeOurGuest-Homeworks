{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar common = require('./common');\nvar assert = require('assert');\nvar EventEmitter = require('../');\n{\n  var ee = new EventEmitter();\n  var events_new_listener_emitted = [];\n  var listeners_new_listener_emitted = [];\n\n  // Sanity check\n  assert.strictEqual(ee.addListener, ee.on);\n  ee.on('newListener', function (event, listener) {\n    // Don't track newListener listeners.\n    if (event === 'newListener') return;\n    events_new_listener_emitted.push(event);\n    listeners_new_listener_emitted.push(listener);\n  });\n  var hello = common.mustCall(function (a, b) {\n    assert.strictEqual('a', a);\n    assert.strictEqual('b', b);\n  });\n  ee.once('newListener', function (name, listener) {\n    assert.strictEqual(name, 'hello');\n    assert.strictEqual(listener, hello);\n    var listeners = this.listeners('hello');\n    assert.ok(Array.isArray(listeners));\n    assert.strictEqual(listeners.length, 0);\n  });\n  ee.on('hello', hello);\n  ee.once('foo', assert.fail);\n  assert.ok(Array.isArray(events_new_listener_emitted));\n  assert.strictEqual(events_new_listener_emitted.length, 2);\n  assert.strictEqual(events_new_listener_emitted[0], 'hello');\n  assert.strictEqual(events_new_listener_emitted[1], 'foo');\n  assert.ok(Array.isArray(listeners_new_listener_emitted));\n  assert.strictEqual(listeners_new_listener_emitted.length, 2);\n  assert.strictEqual(listeners_new_listener_emitted[0], hello);\n  assert.strictEqual(listeners_new_listener_emitted[1], assert.fail);\n  ee.emit('hello', 'a', 'b');\n}\n\n// just make sure that this doesn't throw:\n{\n  var f = new EventEmitter();\n  f.setMaxListeners(0);\n}\n{\n  var listen1 = function () {};\n  var listen2 = function () {};\n  var ee = new EventEmitter();\n  ee.once('newListener', function () {\n    var listeners = ee.listeners('hello');\n    assert.ok(Array.isArray(listeners));\n    assert.strictEqual(listeners.length, 0);\n    ee.once('newListener', function () {\n      var listeners = ee.listeners('hello');\n      assert.ok(Array.isArray(listeners));\n      assert.strictEqual(listeners.length, 0);\n    });\n    ee.on('hello', listen2);\n  });\n  ee.on('hello', listen1);\n  // The order of listeners on an event is not always the order in which the\n  // listeners were added.\n  var listeners = ee.listeners('hello');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 2);\n  assert.strictEqual(listeners[0], listen2);\n  assert.strictEqual(listeners[1], listen1);\n}\n\n// Verify that the listener must be a function\nassert.throws(function () {\n  var ee = new EventEmitter();\n  ee.on('foo', null);\n}, /^TypeError: The \"listener\" argument must be of type Function. Received type object$/);","map":{"version":3,"names":["common","require","assert","EventEmitter","ee","events_new_listener_emitted","listeners_new_listener_emitted","strictEqual","addListener","on","event","listener","push","hello","mustCall","a","b","once","name","listeners","ok","Array","isArray","length","fail","emit","f","setMaxListeners","listen1","listen2","throws"],"sources":["C:/Users/MacoT/OneDrive/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/node_modules/events/tests/add-listeners.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar common = require('./common');\r\nvar assert = require('assert');\r\nvar EventEmitter = require('../');\r\n\r\n{\r\n  var ee = new EventEmitter();\r\n  var events_new_listener_emitted = [];\r\n  var listeners_new_listener_emitted = [];\r\n\r\n  // Sanity check\r\n  assert.strictEqual(ee.addListener, ee.on);\r\n\r\n  ee.on('newListener', function(event, listener) {\r\n    // Don't track newListener listeners.\r\n    if (event === 'newListener')\r\n      return;\r\n\r\n    events_new_listener_emitted.push(event);\r\n    listeners_new_listener_emitted.push(listener);\r\n  });\r\n\r\n  var hello = common.mustCall(function(a, b) {\r\n    assert.strictEqual('a', a);\r\n    assert.strictEqual('b', b);\r\n  });\r\n\r\n  ee.once('newListener', function(name, listener) {\r\n    assert.strictEqual(name, 'hello');\r\n    assert.strictEqual(listener, hello);\r\n\r\n    var listeners = this.listeners('hello');\r\n    assert.ok(Array.isArray(listeners));\r\n    assert.strictEqual(listeners.length, 0);\r\n  });\r\n\r\n  ee.on('hello', hello);\r\n  ee.once('foo', assert.fail);\r\n\r\n  assert.ok(Array.isArray(events_new_listener_emitted));\r\n  assert.strictEqual(events_new_listener_emitted.length, 2);\r\n  assert.strictEqual(events_new_listener_emitted[0], 'hello');\r\n  assert.strictEqual(events_new_listener_emitted[1], 'foo');\r\n\r\n  assert.ok(Array.isArray(listeners_new_listener_emitted));\r\n  assert.strictEqual(listeners_new_listener_emitted.length, 2);\r\n  assert.strictEqual(listeners_new_listener_emitted[0], hello);\r\n  assert.strictEqual(listeners_new_listener_emitted[1], assert.fail);\r\n\r\n  ee.emit('hello', 'a', 'b');\r\n}\r\n\r\n// just make sure that this doesn't throw:\r\n{\r\n  var f = new EventEmitter();\r\n\r\n  f.setMaxListeners(0);\r\n}\r\n\r\n{\r\n  var listen1 = function() {};\r\n  var listen2 = function() {};\r\n  var ee = new EventEmitter();\r\n\r\n  ee.once('newListener', function() {\r\n    var listeners = ee.listeners('hello');\r\n    assert.ok(Array.isArray(listeners));\r\n    assert.strictEqual(listeners.length, 0);\r\n    ee.once('newListener', function() {\r\n      var listeners = ee.listeners('hello');\r\n      assert.ok(Array.isArray(listeners));\r\n      assert.strictEqual(listeners.length, 0);\r\n    });\r\n    ee.on('hello', listen2);\r\n  });\r\n  ee.on('hello', listen1);\r\n  // The order of listeners on an event is not always the order in which the\r\n  // listeners were added.\r\n  var listeners = ee.listeners('hello');\r\n  assert.ok(Array.isArray(listeners));\r\n  assert.strictEqual(listeners.length, 2);\r\n  assert.strictEqual(listeners[0], listen2);\r\n  assert.strictEqual(listeners[1], listen1);\r\n}\r\n\r\n// Verify that the listener must be a function\r\nassert.throws(function() {\r\n  var ee = new EventEmitter();\r\n\r\n  ee.on('foo', null);\r\n}, /^TypeError: The \"listener\" argument must be of type Function. Received type object$/);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
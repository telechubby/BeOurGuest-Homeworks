{"ast":null,"code":"var test = require('tape');\nvar functionsHaveNames = require('functions-have-names');\nvar hasSymbols = require('has-symbols');\nrequire('./legacy-compat');\nvar common = require('./common');\n\n// we do this to easily wrap each file in a mocha test\n// and also have browserify be able to statically analyze this file\nvar orig_require = require;\nvar require = function (file) {\n  test(file, function (t) {\n    // Store the tape object so tests can access it.\n    t.on('end', function () {\n      delete common.test;\n    });\n    common.test = t;\n    try {\n      var exp = orig_require(file);\n      if (exp && exp.then) {\n        exp.then(function () {\n          t.end();\n        }, t.fail);\n        return;\n      }\n    } catch (err) {\n      t.fail(err);\n    }\n    t.end();\n  });\n};\nrequire('./add-listeners.js');\nrequire('./check-listener-leaks.js');\nrequire('./errors.js');\nrequire('./events-list.js');\nif (typeof Promise === 'function') {\n  require('./events-once.js');\n} else {\n  // Promise support is not available.\n  test('./events-once.js', {\n    skip: true\n  }, function () {});\n}\nrequire('./listener-count.js');\nrequire('./listeners-side-effects.js');\nrequire('./listeners.js');\nrequire('./max-listeners.js');\nif (functionsHaveNames()) {\n  require('./method-names.js');\n} else {\n  // Function.name is not supported in IE\n  test('./method-names.js', {\n    skip: true\n  }, function () {});\n}\nrequire('./modify-in-emit.js');\nrequire('./num-args.js');\nrequire('./once.js');\nrequire('./prepend.js');\nrequire('./set-max-listeners-side-effects.js');\nrequire('./special-event-names.js');\nrequire('./subclass.js');\nif (hasSymbols()) {\n  require('./symbols.js');\n} else {\n  // Symbol is not available.\n  test('./symbols.js', {\n    skip: true\n  }, function () {});\n}\nrequire('./remove-all-listeners.js');\nrequire('./remove-listeners.js');","map":{"version":3,"names":["test","require","functionsHaveNames","hasSymbols","common","orig_require","file","t","on","exp","then","end","fail","err","Promise","skip"],"sources":["C:/Users/MacoT/OneDrive/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/node_modules/events/tests/index.js"],"sourcesContent":["var test = require('tape');\r\nvar functionsHaveNames = require('functions-have-names');\r\nvar hasSymbols = require('has-symbols');\r\n\r\nrequire('./legacy-compat');\r\nvar common = require('./common');\r\n\r\n// we do this to easily wrap each file in a mocha test\r\n// and also have browserify be able to statically analyze this file\r\nvar orig_require = require;\r\nvar require = function(file) {\r\n    test(file, function(t) {\r\n        // Store the tape object so tests can access it.\r\n        t.on('end', function () { delete common.test; });\r\n        common.test = t;\r\n\r\n        try {\r\n          var exp = orig_require(file);\r\n          if (exp && exp.then) {\r\n            exp.then(function () { t.end(); }, t.fail);\r\n            return;\r\n          }\r\n        } catch (err) {\r\n          t.fail(err);\r\n        }\r\n        t.end();\r\n    });\r\n};\r\n\r\nrequire('./add-listeners.js');\r\nrequire('./check-listener-leaks.js');\r\nrequire('./errors.js');\r\nrequire('./events-list.js');\r\nif (typeof Promise === 'function') {\r\n  require('./events-once.js');\r\n} else {\r\n  // Promise support is not available.\r\n  test('./events-once.js', { skip: true }, function () {});\r\n}\r\nrequire('./listener-count.js');\r\nrequire('./listeners-side-effects.js');\r\nrequire('./listeners.js');\r\nrequire('./max-listeners.js');\r\nif (functionsHaveNames()) {\r\n  require('./method-names.js');\r\n} else {\r\n  // Function.name is not supported in IE\r\n  test('./method-names.js', { skip: true }, function () {});\r\n}\r\nrequire('./modify-in-emit.js');\r\nrequire('./num-args.js');\r\nrequire('./once.js');\r\nrequire('./prepend.js');\r\nrequire('./set-max-listeners-side-effects.js');\r\nrequire('./special-event-names.js');\r\nrequire('./subclass.js');\r\nif (hasSymbols()) {\r\n  require('./symbols.js');\r\n} else {\r\n  // Symbol is not available.\r\n  test('./symbols.js', { skip: true }, function () {});\r\n}\r\nrequire('./remove-all-listeners.js');\r\nrequire('./remove-listeners.js');\r\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AACxD,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEvCA,OAAO,CAAC,iBAAiB,CAAC;AAC1B,IAAIG,MAAM,GAAGH,OAAO,CAAC,UAAU,CAAC;;AAEhC;AACA;AACA,IAAII,YAAY,GAAGJ,OAAO;AAC1B,IAAIA,OAAO,GAAG,UAASK,IAAI,EAAE;EACzBN,IAAI,CAACM,IAAI,EAAE,UAASC,CAAC,EAAE;IACnB;IACAA,CAAC,CAACC,EAAE,CAAC,KAAK,EAAE,YAAY;MAAE,OAAOJ,MAAM,CAACJ,IAAI;IAAE,CAAC,CAAC;IAChDI,MAAM,CAACJ,IAAI,GAAGO,CAAC;IAEf,IAAI;MACF,IAAIE,GAAG,GAAGJ,YAAY,CAACC,IAAI,CAAC;MAC5B,IAAIG,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE;QACnBD,GAAG,CAACC,IAAI,CAAC,YAAY;UAAEH,CAAC,CAACI,GAAG,EAAE;QAAE,CAAC,EAAEJ,CAAC,CAACK,IAAI,CAAC;QAC1C;MACF;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZN,CAAC,CAACK,IAAI,CAACC,GAAG,CAAC;IACb;IACAN,CAAC,CAACI,GAAG,EAAE;EACX,CAAC,CAAC;AACN,CAAC;AAEDV,OAAO,CAAC,oBAAoB,CAAC;AAC7BA,OAAO,CAAC,2BAA2B,CAAC;AACpCA,OAAO,CAAC,aAAa,CAAC;AACtBA,OAAO,CAAC,kBAAkB,CAAC;AAC3B,IAAI,OAAOa,OAAO,KAAK,UAAU,EAAE;EACjCb,OAAO,CAAC,kBAAkB,CAAC;AAC7B,CAAC,MAAM;EACL;EACAD,IAAI,CAAC,kBAAkB,EAAE;IAAEe,IAAI,EAAE;EAAK,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;AAC1D;AACAd,OAAO,CAAC,qBAAqB,CAAC;AAC9BA,OAAO,CAAC,6BAA6B,CAAC;AACtCA,OAAO,CAAC,gBAAgB,CAAC;AACzBA,OAAO,CAAC,oBAAoB,CAAC;AAC7B,IAAIC,kBAAkB,EAAE,EAAE;EACxBD,OAAO,CAAC,mBAAmB,CAAC;AAC9B,CAAC,MAAM;EACL;EACAD,IAAI,CAAC,mBAAmB,EAAE;IAAEe,IAAI,EAAE;EAAK,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;AAC3D;AACAd,OAAO,CAAC,qBAAqB,CAAC;AAC9BA,OAAO,CAAC,eAAe,CAAC;AACxBA,OAAO,CAAC,WAAW,CAAC;AACpBA,OAAO,CAAC,cAAc,CAAC;AACvBA,OAAO,CAAC,qCAAqC,CAAC;AAC9CA,OAAO,CAAC,0BAA0B,CAAC;AACnCA,OAAO,CAAC,eAAe,CAAC;AACxB,IAAIE,UAAU,EAAE,EAAE;EAChBF,OAAO,CAAC,cAAc,CAAC;AACzB,CAAC,MAAM;EACL;EACAD,IAAI,CAAC,cAAc,EAAE;IAAEe,IAAI,EAAE;EAAK,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;AACtD;AACAd,OAAO,CAAC,2BAA2B,CAAC;AACpCA,OAAO,CAAC,uBAAuB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar common = require('./common');\nvar assert = require('assert');\nvar events = require('../');\nvar test = require('tape');\nfunction expect(expected) {\n  var actual = [];\n  test.onFinish(function () {\n    var sortedActual = actual.sort();\n    var sortedExpected = expected.sort();\n    assert.strictEqual(sortedActual.length, sortedExpected.length);\n    for (var index = 0; index < sortedActual.length; index++) {\n      var value = sortedActual[index];\n      assert.strictEqual(value, sortedExpected[index]);\n    }\n  });\n  function listener(name) {\n    actual.push(name);\n  }\n  return common.mustCall(listener, expected.length);\n}\n{\n  var ee = new events.EventEmitter();\n  var noop = common.mustNotCall();\n  ee.on('foo', noop);\n  ee.on('bar', noop);\n  ee.on('baz', noop);\n  ee.on('baz', noop);\n  var fooListeners = ee.listeners('foo');\n  var barListeners = ee.listeners('bar');\n  var bazListeners = ee.listeners('baz');\n  ee.on('removeListener', expect(['bar', 'baz', 'baz']));\n  ee.removeAllListeners('bar');\n  ee.removeAllListeners('baz');\n  var listeners = ee.listeners('foo');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 1);\n  assert.strictEqual(listeners[0], noop);\n  listeners = ee.listeners('bar');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n  listeners = ee.listeners('baz');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n  // After calling removeAllListeners(),\n  // the old listeners array should stay unchanged.\n  assert.strictEqual(fooListeners.length, 1);\n  assert.strictEqual(fooListeners[0], noop);\n  assert.strictEqual(barListeners.length, 1);\n  assert.strictEqual(barListeners[0], noop);\n  assert.strictEqual(bazListeners.length, 2);\n  assert.strictEqual(bazListeners[0], noop);\n  assert.strictEqual(bazListeners[1], noop);\n  // After calling removeAllListeners(),\n  // new listeners arrays is different from the old.\n  assert.notStrictEqual(ee.listeners('bar'), barListeners);\n  assert.notStrictEqual(ee.listeners('baz'), bazListeners);\n}\n{\n  var ee = new events.EventEmitter();\n  ee.on('foo', common.mustNotCall());\n  ee.on('bar', common.mustNotCall());\n  // Expect LIFO order\n  ee.on('removeListener', expect(['foo', 'bar', 'removeListener']));\n  ee.on('removeListener', expect(['foo', 'bar']));\n  ee.removeAllListeners();\n  var listeners = ee.listeners('foo');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n  listeners = ee.listeners('bar');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n}\n{\n  var ee = new events.EventEmitter();\n  ee.on('removeListener', common.mustNotCall());\n  // Check for regression where removeAllListeners() throws when\n  // there exists a 'removeListener' listener, but there exists\n  // no listeners for the provided event type.\n  assert.doesNotThrow(function () {\n    ee.removeAllListeners(ee, 'foo');\n  });\n}\n{\n  var ee = new events.EventEmitter();\n  var expectLength = 2;\n  ee.on('removeListener', function () {\n    assert.strictEqual(expectLength--, this.listeners('baz').length);\n  });\n  ee.on('baz', common.mustNotCall());\n  ee.on('baz', common.mustNotCall());\n  ee.on('baz', common.mustNotCall());\n  assert.strictEqual(ee.listeners('baz').length, expectLength + 1);\n  ee.removeAllListeners('baz');\n  assert.strictEqual(ee.listeners('baz').length, 0);\n}\n{\n  var ee = new events.EventEmitter();\n  assert.strictEqual(ee, ee.removeAllListeners());\n}\n{\n  var ee = new events.EventEmitter();\n  ee._events = undefined;\n  assert.strictEqual(ee, ee.removeAllListeners());\n}","map":{"version":3,"names":["common","require","assert","events","test","expect","expected","actual","onFinish","sortedActual","sort","sortedExpected","strictEqual","length","index","value","listener","name","push","mustCall","ee","EventEmitter","noop","mustNotCall","on","fooListeners","listeners","barListeners","bazListeners","removeAllListeners","ok","Array","isArray","notStrictEqual","doesNotThrow","expectLength","_events","undefined"],"sources":["C:/Users/MacoT/OneDrive/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/node_modules/events/tests/remove-all-listeners.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar common = require('./common');\r\nvar assert = require('assert');\r\nvar events = require('../');\r\nvar test = require('tape');\r\n\r\nfunction expect(expected) {\r\n  var actual = [];\r\n  test.onFinish(function() {\r\n    var sortedActual = actual.sort();\r\n    var sortedExpected = expected.sort();\r\n    assert.strictEqual(sortedActual.length, sortedExpected.length);\r\n    for (var index = 0; index < sortedActual.length; index++) {\r\n      var value = sortedActual[index];\r\n      assert.strictEqual(value, sortedExpected[index]);\r\n    }\r\n  });\r\n  function listener(name) {\r\n    actual.push(name);\r\n  }\r\n  return common.mustCall(listener, expected.length);\r\n}\r\n\r\n{\r\n  var ee = new events.EventEmitter();\r\n  var noop = common.mustNotCall();\r\n  ee.on('foo', noop);\r\n  ee.on('bar', noop);\r\n  ee.on('baz', noop);\r\n  ee.on('baz', noop);\r\n  var fooListeners = ee.listeners('foo');\r\n  var barListeners = ee.listeners('bar');\r\n  var bazListeners = ee.listeners('baz');\r\n  ee.on('removeListener', expect(['bar', 'baz', 'baz']));\r\n  ee.removeAllListeners('bar');\r\n  ee.removeAllListeners('baz');\r\n\r\n  var listeners = ee.listeners('foo');\r\n  assert.ok(Array.isArray(listeners));\r\n  assert.strictEqual(listeners.length, 1);\r\n  assert.strictEqual(listeners[0], noop);\r\n\r\n  listeners = ee.listeners('bar');\r\n  assert.ok(Array.isArray(listeners));\r\n  assert.strictEqual(listeners.length, 0);\r\n  listeners = ee.listeners('baz');\r\n  assert.ok(Array.isArray(listeners));\r\n  assert.strictEqual(listeners.length, 0);\r\n  // After calling removeAllListeners(),\r\n  // the old listeners array should stay unchanged.\r\n  assert.strictEqual(fooListeners.length, 1);\r\n  assert.strictEqual(fooListeners[0], noop);\r\n  assert.strictEqual(barListeners.length, 1);\r\n  assert.strictEqual(barListeners[0], noop);\r\n  assert.strictEqual(bazListeners.length, 2);\r\n  assert.strictEqual(bazListeners[0], noop);\r\n  assert.strictEqual(bazListeners[1], noop);\r\n  // After calling removeAllListeners(),\r\n  // new listeners arrays is different from the old.\r\n  assert.notStrictEqual(ee.listeners('bar'), barListeners);\r\n  assert.notStrictEqual(ee.listeners('baz'), bazListeners);\r\n}\r\n\r\n{\r\n  var ee = new events.EventEmitter();\r\n  ee.on('foo', common.mustNotCall());\r\n  ee.on('bar', common.mustNotCall());\r\n  // Expect LIFO order\r\n  ee.on('removeListener', expect(['foo', 'bar', 'removeListener']));\r\n  ee.on('removeListener', expect(['foo', 'bar']));\r\n  ee.removeAllListeners();\r\n\r\n  var listeners = ee.listeners('foo');\r\n  assert.ok(Array.isArray(listeners));\r\n  assert.strictEqual(listeners.length, 0);\r\n  listeners = ee.listeners('bar');\r\n  assert.ok(Array.isArray(listeners));\r\n  assert.strictEqual(listeners.length, 0);\r\n}\r\n\r\n{\r\n  var ee = new events.EventEmitter();\r\n  ee.on('removeListener', common.mustNotCall());\r\n  // Check for regression where removeAllListeners() throws when\r\n  // there exists a 'removeListener' listener, but there exists\r\n  // no listeners for the provided event type.\r\n  assert.doesNotThrow(function () { ee.removeAllListeners(ee, 'foo') });\r\n}\r\n\r\n{\r\n  var ee = new events.EventEmitter();\r\n  var expectLength = 2;\r\n  ee.on('removeListener', function() {\r\n    assert.strictEqual(expectLength--, this.listeners('baz').length);\r\n  });\r\n  ee.on('baz', common.mustNotCall());\r\n  ee.on('baz', common.mustNotCall());\r\n  ee.on('baz', common.mustNotCall());\r\n  assert.strictEqual(ee.listeners('baz').length, expectLength + 1);\r\n  ee.removeAllListeners('baz');\r\n  assert.strictEqual(ee.listeners('baz').length, 0);\r\n}\r\n\r\n{\r\n  var ee = new events.EventEmitter();\r\n  assert.strictEqual(ee, ee.removeAllListeners());\r\n}\r\n\r\n{\r\n  var ee = new events.EventEmitter();\r\n  ee._events = undefined;\r\n  assert.strictEqual(ee, ee.removeAllListeners());\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIE,MAAM,GAAGF,OAAO,CAAC,KAAK,CAAC;AAC3B,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAE1B,SAASI,MAAM,CAACC,QAAQ,EAAE;EACxB,IAAIC,MAAM,GAAG,EAAE;EACfH,IAAI,CAACI,QAAQ,CAAC,YAAW;IACvB,IAAIC,YAAY,GAAGF,MAAM,CAACG,IAAI,EAAE;IAChC,IAAIC,cAAc,GAAGL,QAAQ,CAACI,IAAI,EAAE;IACpCR,MAAM,CAACU,WAAW,CAACH,YAAY,CAACI,MAAM,EAAEF,cAAc,CAACE,MAAM,CAAC;IAC9D,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,YAAY,CAACI,MAAM,EAAEC,KAAK,EAAE,EAAE;MACxD,IAAIC,KAAK,GAAGN,YAAY,CAACK,KAAK,CAAC;MAC/BZ,MAAM,CAACU,WAAW,CAACG,KAAK,EAAEJ,cAAc,CAACG,KAAK,CAAC,CAAC;IAClD;EACF,CAAC,CAAC;EACF,SAASE,QAAQ,CAACC,IAAI,EAAE;IACtBV,MAAM,CAACW,IAAI,CAACD,IAAI,CAAC;EACnB;EACA,OAAOjB,MAAM,CAACmB,QAAQ,CAACH,QAAQ,EAAEV,QAAQ,CAACO,MAAM,CAAC;AACnD;AAEA;EACE,IAAIO,EAAE,GAAG,IAAIjB,MAAM,CAACkB,YAAY,EAAE;EAClC,IAAIC,IAAI,GAAGtB,MAAM,CAACuB,WAAW,EAAE;EAC/BH,EAAE,CAACI,EAAE,CAAC,KAAK,EAAEF,IAAI,CAAC;EAClBF,EAAE,CAACI,EAAE,CAAC,KAAK,EAAEF,IAAI,CAAC;EAClBF,EAAE,CAACI,EAAE,CAAC,KAAK,EAAEF,IAAI,CAAC;EAClBF,EAAE,CAACI,EAAE,CAAC,KAAK,EAAEF,IAAI,CAAC;EAClB,IAAIG,YAAY,GAAGL,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC;EACtC,IAAIC,YAAY,GAAGP,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC;EACtC,IAAIE,YAAY,GAAGR,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC;EACtCN,EAAE,CAACI,EAAE,CAAC,gBAAgB,EAAEnB,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;EACtDe,EAAE,CAACS,kBAAkB,CAAC,KAAK,CAAC;EAC5BT,EAAE,CAACS,kBAAkB,CAAC,KAAK,CAAC;EAE5B,IAAIH,SAAS,GAAGN,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC;EACnCxB,MAAM,CAAC4B,EAAE,CAACC,KAAK,CAACC,OAAO,CAACN,SAAS,CAAC,CAAC;EACnCxB,MAAM,CAACU,WAAW,CAACc,SAAS,CAACb,MAAM,EAAE,CAAC,CAAC;EACvCX,MAAM,CAACU,WAAW,CAACc,SAAS,CAAC,CAAC,CAAC,EAAEJ,IAAI,CAAC;EAEtCI,SAAS,GAAGN,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC;EAC/BxB,MAAM,CAAC4B,EAAE,CAACC,KAAK,CAACC,OAAO,CAACN,SAAS,CAAC,CAAC;EACnCxB,MAAM,CAACU,WAAW,CAACc,SAAS,CAACb,MAAM,EAAE,CAAC,CAAC;EACvCa,SAAS,GAAGN,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC;EAC/BxB,MAAM,CAAC4B,EAAE,CAACC,KAAK,CAACC,OAAO,CAACN,SAAS,CAAC,CAAC;EACnCxB,MAAM,CAACU,WAAW,CAACc,SAAS,CAACb,MAAM,EAAE,CAAC,CAAC;EACvC;EACA;EACAX,MAAM,CAACU,WAAW,CAACa,YAAY,CAACZ,MAAM,EAAE,CAAC,CAAC;EAC1CX,MAAM,CAACU,WAAW,CAACa,YAAY,CAAC,CAAC,CAAC,EAAEH,IAAI,CAAC;EACzCpB,MAAM,CAACU,WAAW,CAACe,YAAY,CAACd,MAAM,EAAE,CAAC,CAAC;EAC1CX,MAAM,CAACU,WAAW,CAACe,YAAY,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC;EACzCpB,MAAM,CAACU,WAAW,CAACgB,YAAY,CAACf,MAAM,EAAE,CAAC,CAAC;EAC1CX,MAAM,CAACU,WAAW,CAACgB,YAAY,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC;EACzCpB,MAAM,CAACU,WAAW,CAACgB,YAAY,CAAC,CAAC,CAAC,EAAEN,IAAI,CAAC;EACzC;EACA;EACApB,MAAM,CAAC+B,cAAc,CAACb,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC,EAAEC,YAAY,CAAC;EACxDzB,MAAM,CAAC+B,cAAc,CAACb,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC,EAAEE,YAAY,CAAC;AAC1D;AAEA;EACE,IAAIR,EAAE,GAAG,IAAIjB,MAAM,CAACkB,YAAY,EAAE;EAClCD,EAAE,CAACI,EAAE,CAAC,KAAK,EAAExB,MAAM,CAACuB,WAAW,EAAE,CAAC;EAClCH,EAAE,CAACI,EAAE,CAAC,KAAK,EAAExB,MAAM,CAACuB,WAAW,EAAE,CAAC;EAClC;EACAH,EAAE,CAACI,EAAE,CAAC,gBAAgB,EAAEnB,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC,CAAC;EACjEe,EAAE,CAACI,EAAE,CAAC,gBAAgB,EAAEnB,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;EAC/Ce,EAAE,CAACS,kBAAkB,EAAE;EAEvB,IAAIH,SAAS,GAAGN,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC;EACnCxB,MAAM,CAAC4B,EAAE,CAACC,KAAK,CAACC,OAAO,CAACN,SAAS,CAAC,CAAC;EACnCxB,MAAM,CAACU,WAAW,CAACc,SAAS,CAACb,MAAM,EAAE,CAAC,CAAC;EACvCa,SAAS,GAAGN,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC;EAC/BxB,MAAM,CAAC4B,EAAE,CAACC,KAAK,CAACC,OAAO,CAACN,SAAS,CAAC,CAAC;EACnCxB,MAAM,CAACU,WAAW,CAACc,SAAS,CAACb,MAAM,EAAE,CAAC,CAAC;AACzC;AAEA;EACE,IAAIO,EAAE,GAAG,IAAIjB,MAAM,CAACkB,YAAY,EAAE;EAClCD,EAAE,CAACI,EAAE,CAAC,gBAAgB,EAAExB,MAAM,CAACuB,WAAW,EAAE,CAAC;EAC7C;EACA;EACA;EACArB,MAAM,CAACgC,YAAY,CAAC,YAAY;IAAEd,EAAE,CAACS,kBAAkB,CAACT,EAAE,EAAE,KAAK,CAAC;EAAC,CAAC,CAAC;AACvE;AAEA;EACE,IAAIA,EAAE,GAAG,IAAIjB,MAAM,CAACkB,YAAY,EAAE;EAClC,IAAIc,YAAY,GAAG,CAAC;EACpBf,EAAE,CAACI,EAAE,CAAC,gBAAgB,EAAE,YAAW;IACjCtB,MAAM,CAACU,WAAW,CAACuB,YAAY,EAAE,EAAE,IAAI,CAACT,SAAS,CAAC,KAAK,CAAC,CAACb,MAAM,CAAC;EAClE,CAAC,CAAC;EACFO,EAAE,CAACI,EAAE,CAAC,KAAK,EAAExB,MAAM,CAACuB,WAAW,EAAE,CAAC;EAClCH,EAAE,CAACI,EAAE,CAAC,KAAK,EAAExB,MAAM,CAACuB,WAAW,EAAE,CAAC;EAClCH,EAAE,CAACI,EAAE,CAAC,KAAK,EAAExB,MAAM,CAACuB,WAAW,EAAE,CAAC;EAClCrB,MAAM,CAACU,WAAW,CAACQ,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC,CAACb,MAAM,EAAEsB,YAAY,GAAG,CAAC,CAAC;EAChEf,EAAE,CAACS,kBAAkB,CAAC,KAAK,CAAC;EAC5B3B,MAAM,CAACU,WAAW,CAACQ,EAAE,CAACM,SAAS,CAAC,KAAK,CAAC,CAACb,MAAM,EAAE,CAAC,CAAC;AACnD;AAEA;EACE,IAAIO,EAAE,GAAG,IAAIjB,MAAM,CAACkB,YAAY,EAAE;EAClCnB,MAAM,CAACU,WAAW,CAACQ,EAAE,EAAEA,EAAE,CAACS,kBAAkB,EAAE,CAAC;AACjD;AAEA;EACE,IAAIT,EAAE,GAAG,IAAIjB,MAAM,CAACkB,YAAY,EAAE;EAClCD,EAAE,CAACgB,OAAO,GAAGC,SAAS;EACtBnC,MAAM,CAACU,WAAW,CAACQ,EAAE,EAAEA,EAAE,CAACS,kBAAkB,EAAE,CAAC;AACjD"},"metadata":{},"sourceType":"script","externalDependencies":[]}
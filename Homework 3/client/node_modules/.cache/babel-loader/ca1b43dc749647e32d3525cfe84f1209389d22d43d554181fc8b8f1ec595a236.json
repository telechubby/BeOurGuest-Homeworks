{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar common = require('./common');\nvar assert = require('assert');\nvar events = require('../');\nvar e = new events.EventEmitter();\nvar hasDefineProperty = !!Object.defineProperty;\ntry {\n  Object.defineProperty({}, 'x', {\n    value: 0\n  });\n} catch (err) {\n  hasDefineProperty = false;\n}\ne.on('maxListeners', common.mustCall());\n\n// Should not corrupt the 'maxListeners' queue.\ne.setMaxListeners(42);\nvar throwsObjs = [NaN, -1, 'and even this'];\nvar maxError = /^RangeError: The value of \"n\" is out of range\\. It must be a non-negative number\\./;\nvar defError = /^RangeError: The value of \"defaultMaxListeners\" is out of range\\. It must be a non-negative number\\./;\nfor (var i = 0; i < throwsObjs.length; i++) {\n  var obj = throwsObjs[i];\n  assert.throws(function () {\n    e.setMaxListeners(obj);\n  }, maxError);\n  if (hasDefineProperty) {\n    assert.throws(function () {\n      events.defaultMaxListeners = obj;\n    }, defError);\n  }\n}\ne.emit('maxListeners');","map":{"version":3,"names":["common","require","assert","events","e","EventEmitter","hasDefineProperty","Object","defineProperty","value","err","on","mustCall","setMaxListeners","throwsObjs","NaN","maxError","defError","i","length","obj","throws","defaultMaxListeners","emit"],"sources":["C:/Users/MacoT/OneDrive/Documents/GitHub/BeOurGuest-Homeworks/Homework 3/client/node_modules/events/tests/max-listeners.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar common = require('./common');\r\nvar assert = require('assert');\r\nvar events = require('../');\r\nvar e = new events.EventEmitter();\r\n\r\nvar hasDefineProperty = !!Object.defineProperty;\r\ntry { Object.defineProperty({}, 'x', { value: 0 }); } catch (err) { hasDefineProperty = false }\r\n\r\ne.on('maxListeners', common.mustCall());\r\n\r\n// Should not corrupt the 'maxListeners' queue.\r\ne.setMaxListeners(42);\r\n\r\nvar throwsObjs = [NaN, -1, 'and even this'];\r\nvar maxError = /^RangeError: The value of \"n\" is out of range\\. It must be a non-negative number\\./;\r\nvar defError = /^RangeError: The value of \"defaultMaxListeners\" is out of range\\. It must be a non-negative number\\./;\r\n\r\nfor (var i = 0; i < throwsObjs.length; i++) {\r\n  var obj = throwsObjs[i];\r\n  assert.throws(function() { e.setMaxListeners(obj); }, maxError);\r\n  if (hasDefineProperty) {\r\n    assert.throws(function() { events.defaultMaxListeners = obj; }, defError);\r\n  }\r\n}\r\n\r\ne.emit('maxListeners');\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIE,MAAM,GAAGF,OAAO,CAAC,KAAK,CAAC;AAC3B,IAAIG,CAAC,GAAG,IAAID,MAAM,CAACE,YAAY,EAAE;AAEjC,IAAIC,iBAAiB,GAAG,CAAC,CAACC,MAAM,CAACC,cAAc;AAC/C,IAAI;EAAED,MAAM,CAACC,cAAc,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;AAAE,CAAC,CAAC,OAAOC,GAAG,EAAE;EAAEJ,iBAAiB,GAAG,KAAK;AAAC;AAE9FF,CAAC,CAACO,EAAE,CAAC,cAAc,EAAEX,MAAM,CAACY,QAAQ,EAAE,CAAC;;AAEvC;AACAR,CAAC,CAACS,eAAe,CAAC,EAAE,CAAC;AAErB,IAAIC,UAAU,GAAG,CAACC,GAAG,EAAE,CAAC,CAAC,EAAE,eAAe,CAAC;AAC3C,IAAIC,QAAQ,GAAG,oFAAoF;AACnG,IAAIC,QAAQ,GAAG,sGAAsG;AAErH,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;EAC1C,IAAIE,GAAG,GAAGN,UAAU,CAACI,CAAC,CAAC;EACvBhB,MAAM,CAACmB,MAAM,CAAC,YAAW;IAAEjB,CAAC,CAACS,eAAe,CAACO,GAAG,CAAC;EAAE,CAAC,EAAEJ,QAAQ,CAAC;EAC/D,IAAIV,iBAAiB,EAAE;IACrBJ,MAAM,CAACmB,MAAM,CAAC,YAAW;MAAElB,MAAM,CAACmB,mBAAmB,GAAGF,GAAG;IAAE,CAAC,EAAEH,QAAQ,CAAC;EAC3E;AACF;AAEAb,CAAC,CAACmB,IAAI,CAAC,cAAc,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ljubomirkolev/DIANS/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Event.jsx\";\nimport React, { lazy, Suspense, useState } from 'react';\nimport { Link, renderMatches } from 'react-router-dom';\nimport { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = /*#__PURE__*/lazy(_c = () => import('./List'));\n_c2 = List;\nfunction Event() {\n  let params = window.location.href.split('/')[3];\n  let images = [];\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 33\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(LoadEvents, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 61\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this);\n}\n_c3 = Event;\nfunction arrayBufferToBase64(buffer) {\n  var binary = '';\n  var bytes = [].slice.call(new Uint8Array(buffer));\n  bytes.forEach(b => binary += String.fromCharCode(b));\n  return window.btoa(binary);\n}\n;\nfunction LoadEvents() {\n  fetch('http://localhost:9000/events/').then(res => res.json()).then(events => {\n    events.forEach(function (event) {\n      var base64Flag = 'data:image;base64,';\n      var imageStr = arrayBufferToBase64(event.image.data);\n      var tmpEvent = event;\n      tmpEvent.image = base64Flag + imageStr;\n      images.push(tmpEvent);\n    });\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: events,\n      children: images.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"margin\": \"3vw 3vh\",\n          \"borderBottom\": \"1px solid gray\",\n          \"paddingBottom\": \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: d.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: d.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Time: \", d.startTime, \" - \", d.endTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Contact: \", d.contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: d.image,\n          alt: \"Couldn't load\",\n          style: {\n            height: \"300px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, d.image, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this);\n    console.log(div);\n    return div;\n  });\n}\n_c4 = LoadEvents;\nexport default Event;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"List$lazy\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"Event\");\n$RefreshReg$(_c4, \"LoadEvents\");","map":{"version":3,"names":["React","lazy","Suspense","useState","Link","renderMatches","MDBContainer","MDBRow","MDBCol","useEffect","List","Event","params","window","location","href","split","images","arrayBufferToBase64","buffer","binary","bytes","slice","call","Uint8Array","forEach","b","String","fromCharCode","btoa","LoadEvents","fetch","then","res","json","events","event","base64Flag","imageStr","image","data","tmpEvent","push","div","map","d","name","description","startTime","endTime","contact","height","console","log"],"sources":["/Users/ljubomirkolev/DIANS/GitHub/BeOurGuest-Homeworks/Homework 3/client/src/pages/Event.jsx"],"sourcesContent":["import React, {lazy, Suspense, useState} from 'react'\nimport { Link, renderMatches } from 'react-router-dom';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n} from 'mdb-react-ui-kit';\nimport { useEffect } from 'react';\nconst List = lazy(() => import('./List'));\nfunction Event (){\n    \n    let params = window.location.href.split('/')[3]\n    let images=[]\n        return (\n            <Suspense fallback={<h2>Loading events...</h2>}><LoadEvents/></Suspense>\n        );\n}\n\nfunction arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n};\n\nfunction LoadEvents(){\n    fetch('http://localhost:9000/events/')\n    .then((res) => res.json())\n    .then((events) => {\n        events.forEach(function(event) {\n            var base64Flag = 'data:image;base64,';\n            var imageStr =arrayBufferToBase64(event.image.data);\n            var tmpEvent=event\n            tmpEvent.image=base64Flag+imageStr\n            images.push(tmpEvent)\n        });\n        const div=<div id={events}>\n        {images.map(d => (\n        <div style={{\"margin\":\"3vw 3vh\",\"borderBottom\":\"1px solid gray\",\"paddingBottom\":\"10px\"}} key={d.image}>\n            <h2>{d.name}</h2>\n            <h3>{d.description}</h3>\n            <h3>Time: {d.startTime} - {d.endTime}</h3>\n            <h3>Contact: {d.contact}</h3>\n            <img src={d.image} alt=\"Couldn't load\" style={{height:\"300px\"}}/>\n        </div>))}\n    </div>\n    console.log(div)\n        return div\n    })\n}\nexport default Event"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}